<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--bean初始化销毁方法,后置处理器-->
    <bean id="manager" class="pers.spring4.day02.n2_ioc.bean.Manager" init-method="initMethod" destroy-method="destroyMethod">
        <property name="mname" value="vivy"/>
    </bean>
    <bean id="managerBeanPost" class="pers.spring4.day02.n2_ioc.bean.MyBeanPost"/>

    <!--自动装配
        bean标签属性autowire,配置自动装配
        autowire属性常用的2个值
            byName 根据属性名称注入 ，注入值 bean 的 id 值和类属性名称一样
            byType 根据属性类型注入
    -->
    <bean id="employee" class="pers.spring4.day02.n2_ioc.bean.Employee" autowire="byName"/>
    <bean id="department" class="pers.spring4.day02.n2_ioc.bean.Department">
        <property name="depName" value="HR"/>
    </bean>

    <!--直接配置数据库信息-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
        <!--<property name="username" value="root"/>-->
        <!--<property name="password" value="root"/>-->
        <!--<property name="url" value="jdbc:mysql:///test"/>-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
    <!--</bean>-->

    <!--引入外部属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置数据库信息-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${prop.username}"/>
        <property name="password" value="${prop.password}"/>
        <property name="url" value="${prop.url}"/>
        <property name="driverClassName" value="${prop.driverClassName}"/>
    </bean>
</beans>