<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 1、静态工厂(不需要创建工厂本身)factory-method="getEmployee"：
		指定哪个方法是工厂方法
		class：指定静态工厂全类名
		factory-method:指定工厂方法
		constructor-arg：可以为方法传参
	 -->
    <bean id="employee" class="pers.spring4.day02.n1_ioc.factory.EmployeeStaticFactory" factory-method="getEmployee">
        <constructor-arg value="vivy"></constructor-arg>
    </bean>


    <!--2、实例工厂使用
            1、先配置出实例工厂对象
            2、配置我们要创建的AirPlane使用哪个工厂创建
                1）、factory-bean：指定使用哪个工厂实例
                2）、factory-method：使用哪个工厂方法
    -->
    <bean id="employeeInstanceFactory" class="pers.spring4.day02.n1_ioc.factory.EmployeeInstanceFactory"/>
    <bean id="employee2" class="pers.spring4.day02.n1_ioc.bean.Employee" factory-bean="employeeInstanceFactory" factory-method="getEmployee">
        <constructor-arg value="matumoto"></constructor-arg>
    </bean>

    <!--FactoryBean★(是Spring规定的一个接口);
        只要是这个接口的实现类，Spring都认为是一个工厂；
        1、ioc容器启动的时候不会创建实例
        2、FactoryBean；获取的时候的才创建对象
    -->
    <bean id="employeeFactoryBeanImpl" class="pers.spring4.day02.n1_ioc.factory.EmployeeFactoryBeanImpl"/>
    <!--<bean id="employee3" class="pers.spring4.day02.n1_ioc.bean.Employee"/>-->

    <!-- 以empPar作为父bean，继承后可以省略公共属性值的配置 -->
    <!-- abstract="true"：这个bean的配置是一个抽象的，不能获取他的实例，只能被别人用来继承 -->
    <bean id="empPar" class="pers.spring4.day02.n1_ioc.bean.Employee">
        <property name="employeeAge" value="24"/>
    </bean>
    <bean id="emp1" class="pers.spring4.day02.n1_ioc.bean.Employee" parent="empPar">
        <property name="employeeName" value="v1"/>
    </bean>
    <bean id="emp2" class="pers.spring4.day02.n1_ioc.bean.Employee" parent="empPar">
        <property name="employeeName" value="v2"/>
    </bean>

    <!--depends-on定义依赖
        要求创建emp3之前必须先创建emp1
    -->
    <bean id="emp3" class="pers.spring4.day02.n1_ioc.bean.Employee" depends-on="emp1">
        <property name="employeeName" value="v3"/>
        <property name="employeeAge" value="14"/>
    </bean>
</beans>